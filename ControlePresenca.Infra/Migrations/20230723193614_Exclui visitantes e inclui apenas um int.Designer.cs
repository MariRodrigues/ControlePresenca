// <auto-generated />
using System;
using ControlePresenca.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ControlePresenca.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230723193614_Exclui visitantes e inclui apenas um int")]
    partial class Excluivisitanteseincluiapenasumint
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("ControlePresenca.Domain.Entities.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClasseId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClasseId");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("ControlePresenca.Domain.Entities.Classe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("ControlePresenca.Domain.Entities.Presenca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<bool>("Presente")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("RelatorioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("RelatorioId");

                    b.ToTable("Presencas");
                });

            modelBuilder.Entity("ControlePresenca.Domain.Entities.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClasseId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClasseId");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("ControlePresenca.Domain.Entities.Relatorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClasseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<double>("Oferta")
                        .HasColumnType("double");

                    b.Property<int>("QuantidadeBiblias")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeRevistas")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeVisitantes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClasseId");

                    b.ToTable("Relatorios");
                });

            modelBuilder.Entity("ControlePresenca.Domain.Entities.Aluno", b =>
                {
                    b.HasOne("ControlePresenca.Domain.Entities.Classe", "Classe")
                        .WithMany("Alunos")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");
                });

            modelBuilder.Entity("ControlePresenca.Domain.Entities.Presenca", b =>
                {
                    b.HasOne("ControlePresenca.Domain.Entities.Aluno", "Aluno")
                        .WithMany("Presencas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControlePresenca.Domain.Entities.Relatorio", "Relatorio")
                        .WithMany("Presencas")
                        .HasForeignKey("RelatorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Relatorio");
                });

            modelBuilder.Entity("ControlePresenca.Domain.Entities.Professor", b =>
                {
                    b.HasOne("ControlePresenca.Domain.Entities.Classe", "Classe")
                        .WithMany("Professores")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");
                });

            modelBuilder.Entity("ControlePresenca.Domain.Entities.Relatorio", b =>
                {
                    b.HasOne("ControlePresenca.Domain.Entities.Classe", "Classe")
                        .WithMany("Relatorios")
                        .HasForeignKey("ClasseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classe");
                });

            modelBuilder.Entity("ControlePresenca.Domain.Entities.Aluno", b =>
                {
                    b.Navigation("Presencas");
                });

            modelBuilder.Entity("ControlePresenca.Domain.Entities.Classe", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Professores");

                    b.Navigation("Relatorios");
                });

            modelBuilder.Entity("ControlePresenca.Domain.Entities.Relatorio", b =>
                {
                    b.Navigation("Presencas");
                });
#pragma warning restore 612, 618
        }
    }
}
